#############################
#
# ~ tmux.conf ~ for Chris Jones
# @ipatch - github
# @truckmonth - twitter
## 

# the default "prefix" key in tmux is `C-b` = <Control>+b
# the below configuration will ubind `C-b`
unbind C-b

# the below configuration will reassign the `prefix` key.
# NOTE: `-g` flag makes the `prefix` global to ALL tmux sessions.
set -g prefix C-s

# NOTE: `bind-key` refers to the `prefix` key, ie. press `C-s` then `r` to reload tmux.conf 
# bind-key u split-window -h
#############################
# NOTE: `display` is short for `display-message`
# NOTE: `bind` is short for `bind-key`
##
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded"

# Neovim recommends the below `escape` time setting
set -sg escape-time 10

# Note - the below "-n" option when creating a key-binding
# creates a key-binding without having to use the "prefix" key

# TODO: use a different meta key for moving around between panes.
# ie. don't want to lose `C-l` functionality to clear the screen!

# Note - "set-option" controls the look / feel of tmux.
# set -sa terminal-overrides ",xterm*:Tc"
# set default-terminal "tmux"
set -g default-terminal "xterm-256color"

# NOTE: the below setting should allow True Color, ie. 24 bit color
# within tmux, according to the Arch wiki
# https://wiki.archlinux.org/index.php/Tmux

#############################
# Status line settings
##
# Note - "set" is short for "set-option", it is
# an internal alias within tmux.
set -g status-bg '#3e93b2'
set -g status-fg '#01070a'
set -g status-justify centre # center the window list in status line
# Note - the below option sets / displays the tmux
# session name up to 50 characters long.
# It can be seen in the lower left of the tmux
# status bar. ;)
set -g status-left-length 50
set -g status-right "#(~/.local/bin/battery Discharging) | #[fg=cyan]%d %b %R"

#############################
# seemless integration between vim & tmux keybindings
##
is_vim="ps -o state= -o comm= -t '#{pane_tty}'\
  | grep -iqE '^[^TXZ]+ +(\\S+\V)?g?(view\n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'

#############################
# Winow / pane splitting
##
bind - split-window -v -c "#{pane_current_path}" # split pane and create in path
bind \ split-window -h -c "#{pane_current_path}" # split pane and create in path

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

#############################
# NOTE: `setw` is short for `set-window-option`
##
setw -g base-index 1
setw -g renumber-windows on
set -g default-shell $SHELL
# set -g default-command /
setw -g mode-keys vi                # Vim style navigation in copy mode
set -g mouse on

#############################
# Set keys for easier window management
##
# bind -n S-Up set-option status #shift+up-arrow  # toggle visibility of status bar
bind -n S-Up new-window -c '#{pane_current_path}' # Create a new window within the tmux session
bind -n S-down new-window                         # Create a new window within the tmux session
bind -n S-left prev                               # goto the previous window
bind -n S-right next                              # goto the next window
bind -n C-left swap-window -t -1                  # move the current window to the left
bind -n C-right swap-window -t +1                 # move the current window to the right

#############################
# smart pane switching
##
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|emacs)' && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|emacs)' && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|emacs)' && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|emacs)' && tmux send-keys C-l) || tmux select-pane -R"
#############################
# SSH - adapting tmux to work with term title bars
##
set -g set-titles on          # set-titles-string      
set -g set-titles-string "#{session_name} - #T"

# rename window / pane based on what is currently running.
# NOTE: the below setting doesn't play nice with `Terminal.app`
set -g automatic-rename on

set -g status-left '#S '      # modify the default left status bar

bind C-k clear-history        # Clear the scrollback

set -g history-limit 20000    # Scrollback for days (default is 2000)

#############################
# Activity Notifications / Monitoring
##
set -g monitor-activity on # highlight windows that have unseen activity
set -g visual-activity off # don't show a notification when there is activity in a window

#############################
# Style panes
##
#set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'

# borders
# set -g pane-active-border-fg cyan
set-option -g pane-active-border-bg default
set-option -g pane-active-border-fg colour208 # an orangish unbuntu color

# # set the pane border colors 
# set -g pane-border-fg colour250
# set -g pane-border-bg colour236
# set -g pane-active-border-fg colour250 
# set -g pane-active-border-bg colour250

#############################
# Logging
##
bind P pipe-pane -o "cat >>~/logs/#W.tmux.log" \; display "Toggled logging to ~/logs/#W.tmux.log"

#############################
# `reattach-to-user-namespace`
##
if-shell "uname | grep -q Darwin" "source-file ~/.tmux/tmux.macos.conf"

##############################
# tmux 1.9+ SEE: `man tmux` for more info
## 
set-option -g focus-events on
