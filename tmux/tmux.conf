# the default "prefix" key in tmux is "C-b" = <Control>+b
# the below configuration will ubind C-b
unbind C-b

# the below configuration will reassign the "prefix" key.
set -g prefix C-s

# NOTE: `bind-key` refers to the `prefix` key, ie. press `C-s` then `r` to reload tmux.conf 
# bind-key u split-window -h

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Note - the below "-n" option when creating a key-binding
# creates a key-binding without having to use the "prefix" key

# TODO: use a different meta key for moving around between panes.
# ie. don't want to lose `C-l` functionality to clear the screen!

# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R

# Note - "set-option" controls the look / feel of tmux.
# set-option -ga default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# NOTE: the below setting should allow True Color, ie. 24 bit color
# within tmux, according to the Arch wiki
# https://wiki.archlinux.org/index.php/Tmux

# Note - "set" is short for "set-option", it is
# an internal alias within tmux.
set -g status-bg '#3e93b2'
set -g status-fg '#01070a'

# Note - the below option sets / displays the tmux
# session name up to 50 characters long.
# It can be seen in the lower left of the tmux
# status bar. ;)
set -g status-left-length 50

bind-key - split-window -v
bind-key \ split-window -h

# bind -n S-Left resize-pane -L 2
# bind -n S-Right resize-pane -R 2
# bind -n S-Down resize-pane -D 1
# bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

# Note - the below key-binding is not working.
# bind-key C-j choose-tree

# Note - add the below configuration for pair programming :)
# set -g mode-mouse on 
# set -g mouse-resize-pane on 
# set -g mouse-select-pane on 
# set -g mouse-select-window on 
# set -g default-terminal <screen-256color>;
# set -g history-limit 1000

# Try and get sane scrolling within tmux.
# set -g mouse on

# try and get copy / paste working with macOS Sierra
set -g default-shell $SHELL
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Vim style navigation in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection, just like Vim
# bind-key -t vi-copy v begin-selection

# Setup 'y' to yank (copy), just like Vim
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbbaste
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# NOTE: trying to figure out how to add mouse support / clicking on pane name
# set -g mouse-select-pane on <= tmux did not recognize setting
set -g mouse on

# Toggle the visibility of the tmux status bar
bind-key -n S-Up set-option status #shift+up-arrow Combo

###
# Set keys for easier window management
###
# Create a new window within the tmux session
bind-key -n S-down new-window
# goto the previous window
bind-key -n S-left prev
# goto the next window
bind-key -n S-right next
# move the current window to the left
bind-key -n C-left swap-window -t -1
# move the current window to the right
bind-key -n C-right swap-window -t +1

###
# SSH - adapting tmux to work with term title bars
###
set -g set-titles on
# set -g set-titles-string "#T"
set-option -g set-titles-string "#{session_name} - #T"

# rename window / pane based on what is currently running.
# NOTE: the below setting doesn't play nice with `Terminal.app`
set-option -g automatic-rename on
