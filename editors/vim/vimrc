"""""""""""""""""""""""""""""
"
" Author: Chris Jones
" Source: http://github.com/ipatch/dotfiles/blob/master/editors/vim/vimrc
"

" Want to set this before any others, the default 'leader' key is `\`
" set the 'leader' key to `,`
let g:mapleader = ','

" Don't allow vi compatibility mode; don't need it ü§Ω‚Äç‚ôÇÔ∏è
set nocompatible

" set character encoding, ie. utf-8 is a 'dialect' of unicode.
set fileencoding=utf-8
set encoding=utf-8
set termencoding=utf-8
" Set the title on the terminal tab
set title
set background=dark
" Line numbers
set number
" Highlight current line
set cursorline
" show display menu when using `tab` completeion
set wildmenu
" ignore the below directories with wild menu
set wildignore+=*/tmp/*,*/.git/*
 " Configure backspace so it acts as it should act
set backspace=eol,start,indent
" Enable filetype detection & " Enable filetype-specific plugins
filetype plugin indent on
syntax on
set background=light
" colorscheme solarized8_light

set number
set laststatus=2
set modelines=5
set vb t_vb=
set ts=2 sts=2 sw=2 expandtab
" - Indent by 2 spaces by default - indentation amount for < and > commands.
set shiftwidth=2
set listchars=tab:‚Ä£\ ,eol:¬¨
set incsearch
set nojoinspaces
set display+=lastline

set autoread " reload buffer with `:checktime` when it has been changed by another app.
" Reload all buffers that have been changed by other programs.
noremap <leader>ee :checktime<CR>

let &viewdir=$HOME.'/.vim/tmp/view'

" add italics support for (n)vim
highlight Comment cterm=italic

" enable code folding
set foldmethod=syntax
" " NOTE: the below settings remember code folds on a per file basis
" " CREDIT: üç∞ https://vi.stackexchange.com/questions/13864
" set viewoptions=folds,cursor
" set sessionoptions=folds
" augroup AutoSaveFolds
"   autocmd!
"   " view files are about 500 bytes
"   " bufleave but not bufwinleave captures closing 2nd tab
"   " nested is needed by bufwrite* (if triggered via other autocmd)
"   autocmd BufWinLeave,BufLeave,BufWritePost ?* nested silent! mkview!
"   autocmd BufWinEnter ?* silent loadview
" augroup end
" autocmd BufWinLeave *.* mkview
" autocmd BufWinEnter *.* silent loadview


" keep folds and other stuff when closing file
augroup autoview
  autocmd!
  autocmd BufWinLeave ?* call <SID>make_view()
  autocmd BufWinEnter ?* call <SID>load_view()
augroup END
fun! s:make_view() abort
  if @% != "" && &foldmethod != 'diff'
    mkview!
  endif
endfun
fun! s:load_view() abort
  if @% != ""
    silent! loadview
  endif
endfun

"""""""""""""""""""""""""""""
"
" set keymappings
"
""
" Useful things to know about key mappings.
" `vmap` sets / replaces the key mapping in visual mode
" `nnoremap` - don't remap the current keystroke for normal mode
" `inoremap` - don't remap the current key binding for insert mode
"""""""""""""""""""""""""""""
" Easy access to the start of the line, the below configuration will
" map the '^' key to the '0' key, and move the cursor to the first
" character of a line.
nmap 0 ^
"use ,, for escape <ESC>
inoremap ,, <ESC>
" Note - the below configuration line will map the 'space bar' to ':' so that
" way 'Shift+;' does not have to be pressed to begin a command in normal mode.
nmap <space> :
" Note - the below insert mappings will bind 'jk' / 'kj' to the ESC
" key functionality, so the ESC key does not need to be pressed in insert 
" mode.
imap jk <esc>
imap kj <esc>
" Automatically leave insert mode when the below arrow keys are pressed.
inoremap <silent> <Up> <ESC><Up>
inoremap <silent> <Down> <ESC><Down>

" Fast saving
noremap <leader>w :w<CR>

" load `fzf` from homebrew install
set rtp+=/usr/local/opt/fzf

if has('nvim')
  let g:loaded_sensible=0
  highlight Comment cterm=italic

  " Keymappings for Neovim
  " By default to exit out of `terminal` mode in nvim use `<C-\><C-n>`
  " Instead map `<Esc>`
  tnoremap <Esc> <C-\><C-n>
  tnoremap <A-[> <Esc>
endif

" NOTE: minpac will need to be cloned from github before packages can be
" installed.
set packpath^=~/.vim
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})

"""""""""""""""""""""""""""""
"
" Additional plugins
"
call minpac#add('tpope/vim-surround')
call minpac#add('tpope/vim-unimpaired')
call minpac#add('tpope/vim-scriptease', {'type': 'opt'})
call minpac#add('machakann/vim-highlightedyank')
" Package for pretty colors üåà and aesthetics
call minpac#add('chriskempson/base16-vim')
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
" Package for displaying git branches in the status bar
call minpac#add('tpope/vim-fugitive')
call minpac#add('Yggdroot/indentLine') " Add vertical indentation lines

" Package for syntax highlighting for various languages
call minpac#add('sheerun/vim-polyglot')
" Package for quickly commenting lines in code files
call minpac#add('tpope/vim-commentary')
" Add `fzf` vim plugins
" NOTE: the below `junegunn/fzf` is NOT requried if fzf is installed via brew
" call minpac#add("junegunn/fzf")
call minpac#add('junegunn/fzf.vim')

"""""""""""""""""""""""""""""
"
" minpac - commands
" 
command! PackUpdate packadd minpac | source $MYVIMRC | call minpac#update()
command! PackClean  packadd minpac | source $MYVIMRC | call minpac#clean()

"""""""""""""""""""""""""""""
"
" FZF
""
nmap ; :Buffers<CR>
nmap <Leader>f :Files<CR>
command! FZFMru call fzf#run({
\  'source':  v:oldfiles,
\  'sink':    'e',
\  'options': '-m -x +s',
\  'down':    '40%'})
nmap <Leader>r :FZFMru<CR>


" You can set up fzf window using a Vim command (Neovim or latest Vim 8 required)
let g:fzf_layout = { 'window': 'enew' }
let g:fzf_layout = { 'window': '-tabnew' }
let g:fzf_layout = { 'window': '10split enew' }


"If you opened a readonly file like /etc/hosts press w!! solve :)
cmap w!! w !sudo tee % >/dev/null

