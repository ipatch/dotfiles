-- === AutoRaise ===
--
-- make application active on mouse hover
--

local alert = require("hs.alert")
local timer = require("hs.timer")
local eventtap = require("hs.eventtap")

local events = eventtap.event.types

local obj={}
obj.__index = obj

-- Metadata
obj.name = "AutoRaise"
obj.version = "1.0"
obj.author = "Chris <chris.r.jones.1983@gmail.com>"
obj.homepage = "https://github.com/ipatch/dotfiles"
obj.license = "MIT - https://opensource.org/licenses/MIT"

obj.timeFrame = 1

function obj:init()

  -- NOTE: may need to move vars out of function scope
  local timeFirstControl, firstDown, secondDown = 0, false, false

  local noFlags = function(ev)
    local result = true
    for k,v in pairs(ev:getFlags()) do
      if v then
        result = false
        break
      end
    end
    return result
  end

  local onlyRightCmd = function(ev)
    local result = ev:getFlags().ctrl
    for k,v in pairs(ev:getFlags()) do
      if k ~= "cmd" and v then
        result = false
        break
      end
    end
    return result
  end

  -- the actual meat and potatoes
  obj.eventWatcher = eventtap.new({events.flagsChanged, events.keyDown}, function(ev)
    -- if it's been too long; previous state doesn't matter
    if (timer.secondsSinceEpoch() - timeFirstControl) > module.timeFrame then
      timeFirstControl, firstDown, secondDown = 0, false, false
    end

    if ev:getType() == events.flagsChanged then
      if noFlags(ev) and firstDown and secondDown then -- cmd up and we've seen two, DO STUFF
        
        -- TODO: insert things todo
        hs.alert'AutoRaise Activated 🧟‍♀️'
        autoraise:setTitle("🧟‍♀️")

        -- reset local vars after performing action
        timeFirstControl, firstDown, secondDown = 0, false, false
      elseif onlyRightCmd(ev) and not firstDown then -- cmd down and it's a first
        firstDown = true
        timeFirstCmd = timer.secondsSinceEpoch()
      elseif onlyCmd(ev) and firstDown then  -- cmd down and it's the second
        secondDown = true
      elseif not noFlags(ev) then -- otherwise reset and start over
        timeFirstCmd, firstDown, secondDown = 0, false, false
      end
    else -- it was a key press, so not a lone cmd char -- we don't care about it
      timeFirstCmd, firstDown, secondDown = 0, false, false
    end
    return false
  end)


  -- setup menubar icon
  autoraise = hs.menubar.new()

  -- TODO: figure out how to setup binding for tripple tapping right cmd key
  k = hs.hotkey.modal.new('')
  function k:entered()
    hs.alert'AutoRaise Activated 🧟‍♀️'
    autoraise:setTitle("🧟‍♀️")
  end

  function k:exited()
    hs.alert'Stop AutoRaise 🧟‍♀️ 🔫'
    vnumpad:setTitle("")
  end

  -- TODO: figure key chord / binding
  k:bind('', function() k:exit() end)


  -- TODO: run AppleScript below
end

return obj
