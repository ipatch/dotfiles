{
    "window.zoomLevel": 2,
    "workbench.startupEditor": "newUntitledFile",

    // The number of spaces a tab is equal to. This setting is overriden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.tabSize": 2,

    // Insert spaces when pressing Tab. This setting is overriden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.insertSpaces": true,

    // When opening a file, `editor.tabSize` and `editor.insertSpaces`
    // will be detected based on the file contents.
    "editor.detectIndentation": true,
    "explorer.confirmDragAndDrop": false,

    // disable workbench preview, so when opening a file
    // from âŒ˜+p it opens in a new tab
    "workbench.editor.enablePreview": false,
    "git.ignoreMissingGitWarning": true,

    // The modifier to be used to add multiple cursors 
    // with the mouse. `ctrlCmd` maps to `Control` on Windows 
    // and Linux and to `Command` on macOS. The Go To Definition 
    // and Open Link mouse gestures will adapt such that they do 
    // not conflict with the multicursor modifier.
    "editor.multiCursorModifier": "alt",

    // word wrapping
    "editor.wordWrap": "on",

    // show visual cues at 80 and 120 columns for long lines.
    "editor.rulers": [80,120],

    // show full path to file in the title bar
    "window.title": "${activeEditorLong}",
    "explorer.confirmDelete": false,

    // Insert newline at end of file
    "files.insertFinalNewline": true,

    // Enable tab completion of text
    "editor.tabCompletion": true,

    // Stop from scrolling past bottom of open file
    "editor.scrollBeyondLastLine": false,
    "editor.minimap.enabled": true,

    // use global eslint installed via yarn
    "eslint.packageManager": "yarn",
    "eslint.enable": true,
    "editor.fontLigatures": true,
    "editor.fontFamily": "IBMPlexMonoPlusPlus, 'Fira Code iScript', Menlo, Monaco, 'Courier New', monospace",
    "workbench.editor.tabCloseButton": "off",
    "window.restoreWindows": "all",
    "search.smartCase": true,
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,

    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": [
                    //following will be in italics (=IBMPlexMono Nerd Font Mono)
                    "comment",
                    "entity.name.type.class", //class names
                    "keyword", //import, export, return
                    "constant", //String, Number, Boolean, this, super
                    "storage.modifier", //static keyword
                    "storage.type.class.js", //class keyword
                    "storage.type.function.js", //function keyword
                    "storage.type.js", // Variable declarations
                    "keyword.control.import.js", // Imports
                    "keyword.control.from.js", // From-Keyword
                    "keyword.control.flow.js", // await
                    "keyword.control.conditional.js", // if
                    "keyword.control.loop.js", // for
                    "keyword.operator.new.js", // new
                ],
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": [
                    // will be excluded from italic formatting
                    "invalid",
                    "keyword.operator",
                    "constant.numeric.css",
                    "keyword.other.unit.px.css",
                    "constant.numeric.decial.js",
                    "constant.numeric.json"
                ],
                "settings": {
                    "fontStyle": ""
                }
            }
        
        ]
    },
    "workbench.activityBar.visible": true,
    "workbench.statusBar.feedback.visible": false,
    "workbench.statusBar.visible": true,
    "rust.mode": "legacy",
    "rust.rustup": {
        "nightlyToolchain": "nightly-x86_64-apple-darwin",
        "toolchain": "stable-x86_64-apple-darwin"
    },
    "rust.rls": {
        "useRustfmt": true
    },
    "editor.cursorStyle": "block",
    "editor.cursorBlinking": "solid",
    "terminal.integrated.rendererType": "dom"
}
